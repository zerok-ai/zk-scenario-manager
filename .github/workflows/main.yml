name: helm-publish
on:
  workflow_call:
    inputs:
      HELM_VERSION:
        type: string
        required: true
      ENVIRONMENT:
        type: string
        default: 'poc'
#  workflow_dispatch:
#    inputs:
#      HELM_VERSION:
#        description: 'Helm version'
#        required: true
#      ENVIRONMENT:
#        type: string
#        default: 'poc'
env:
#  HELM_VERSION_INPUT: ${{ github.event.inputs.HELM_VERSION }}
  HELM_VERSION_DISPATCH: ${{ inputs.HELM_VERSION }}
#  ENVIRONMENT_INPUT: ${{ github.event.inputs.ENVIRONMENT }}
  ENVIRONMENT_DISPATCH: ${{ inputs.ENVIRONMENT }}

jobs:
  helm-publish:
    runs-on: zk-self-hosted
    environment:
      name: ${{ inputs.ENVIRONMENT }}
    steps:
#      - name: Set up environment
#        run: |
#          if [ -n "$HELM_VERSION_DISPATCH" ]; then
#            echo "Using HELM_VERSION from workflow_call: $HELM_VERSION_DISPATCH"
#            echo "HELM_VERSION=$HELM_VERSION_DISPATCH" >> $GITHUB_ENV
#            echo "ENVIRONMENT_DISPATCH=$ENVIRONMENT_DISPATCH" >> $GITHUB_ENV
#          elif [ -n "$HELM_VERSION_INPUT" ]; then
#            echo "Using HELM_VERSION from workflow_dispatch: $HELM_VERSION_INPUT"
#            echo "HELM_VERSION=$HELM_VERSION_INPUT" >> $GITHUB_ENV
#            echo "ENVIRONMENT=$ENVIRONMENT_INPUT" >> $GITHUB_ENV
#          else
#            echo "No HELM_VERSION provided!"
#            exit 1
#          fi
#
#          # Set ENVIRONMENT variable
#          echo "ENVIRONMENT=${{ github.event.inputs.ENVIRONMENT }}" >> $GITHUB_ENV

      - name: print-test
        run: echo "$HELM_VERSION"
#      - name: Checkout
#        uses: actions/checkout@v3
#      - name: Configure AWS credentials
#        uses: aws-actions/configure-aws-credentials@v1
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
#          aws-region: ${{ vars.AWS_REGION }}
#
#      - name: s3 sync repo
#        run: aws s3 sync ${{ vars.PUBLIC_HELM_S3_BUCKET }}/zk-client/zk-scenario-manager .
#      - name: helm package
#        run: |-
#              helm dependency update helm-charts
#              helm package --version $HELM_VERSION helm-charts
#      - name: helm index
#        run: |-
#              helm repo index ./ --url https://helm.zerok.ai/zk-client/zk-scenario-manager/
#      - name: s3 sync
#        run: |-
#             aws s3 cp . ${{ vars.PUBLIC_HELM_S3_BUCKET }}/zk-client/zk-scenario-manager  --recursive --exclude "*" --include "index.yaml"  --include "*.tgz" --exclude "*/*"
#
#      - name: Clear CF Cache
#        run: aws cloudfront create-invalidation --distribution-id ${{ vars.CF_DIST_ID }} --paths "/*"
          
     
