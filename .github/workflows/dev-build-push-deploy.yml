# Purpose: This action is triggered through a git push and does all it takes to  deploy the app
# on a cluster
name: dev-build-push-deploy
on:
  push:
    tags: #r/<CLUSTER>/<DOCKER-TAG-OR-VERSION>
      - 'r/**'

  # TODO: delete workflow_dispatch. It's for testing only
  workflow_dispatch:
    inputs:
      DOCKER_TAG:
        description: 'Docker Image Tag'
        required: true
        default: 'latest'
      GKE_CLUSTER:
        description: 'Cluster Name'
        required: true
        default: 'pxclient02'
env:
  DOCKER_REG: ${{ vars.DOCKER_REG }}
  PROJECT_ID: ${{ vars.PROJECT_ID }}
  NS: ${{ vars.NS }}
  DOCKER_REPO: ${{ vars.DOCKER_REPO }}
  APP_NAME: ${{ vars.APP_NAME }}
  GKE_ZONE: ${{ vars.GKE_ZONE }}

  POSTGRES_DB: ${{ vars.POSTGRES_DB }}
  POSTGRES_HOST: ${{ vars.POSTGRES_HOST }}
  POSTGRES_USER: ${{ secrets.POSTGRES_USER }}

jobs:
  init:
    uses: zerok-ai/zk-git-actions/.github/workflows/zk-dev-init.yml@main
    with:
      GKE_CLUSTER: ${{ github.event.inputs.GKE_CLUSTER }}
      GIT_TAG: ${{ github.ref }}
      DOCKER_TAG: ${{ github.event.inputs.DOCKER_TAG }}

  app-helm-build-push:
    uses: zerok-ai/zk-scenario-manager/.github/workflows/_app-helm-build-push.yml@helm-push
    with:
      VERSION: ${{ needs.init.outputs.VERSION }}
      ENVIRONMENT: ${{ needs.init.outputs.ENVIRONMENT }}
      DOCKER_IDENTIFIER: ${{ needs.init.outputs.CLUSTERNAME }}
      HELM_BUCKET_NAME: ${{ needs.init.outputs.HELM_BUCKET_NAME }}
      HELM_BUCKET_URL: ${{ needs.init.outputs.HELM_BUCKET_URL }}
    secrets:
      GKE_SA_KEY: ${{ secrets.GKE_SA_KEY }}
      AWS_ACCESS_ID: ${{ secrets.AWS_ACCESS_ID }}
      AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
    needs: init

  deploy:
    needs: [ init,app-helm-build-push ]
    env:
      CLUSTERNAME: ${{ needs.init.outputs.CLUSTERNAME }}
      VERSION: ${{ needs.init.outputs.VERSION }}
    environment:
      name: ${{ needs.init.outputs.ENVIRONMENT }}
    runs-on: zk-self-hosted
    steps:
      - name: print-debug-vars
        run: |
          echo "GIT_TAG=$GIT_TAG"
          echo "DOCKER_TAG=$VERSION"
          echo "GITHUB_SHA=$GITHUB_SHA"
          echo "DOCKER_REPO=$DOCKER_REPO"
          echo "GKE_ZONE=$GKE_ZONE"

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GKE_SA_KEY }}'

      - id: 'get-credentials'
        uses: 'google-github-actions/get-gke-credentials@v1'
        with:
          cluster_name: '${{ needs.init.outputs.CLUSTERNAME }}'
          location: '${{ env.GKE_ZONE }}'

      - uses: actions/download-artifact@v3
        with:
          name: helm-charts

      - name: Deploy
        run: |-
          helm --install  \
          --set=global.dockerBase=$DOCKER_REG/$PROJECT_ID/$DOCKER_REPO/$CLUSTERNAME \
          --set=image.tag=$VERSION \
          --set=image.migrationTag=$VERSION \
          --set=postgres.host=$POSTGRES_HOST \
          --set=postgres.user=$POSTGRES_USER \
          --set=postgres.dbname=$POSTGRES_DB \
          upgrade $APP_NAME \
           -f ./helm-charts/values.yaml ./helm-charts/ \
           --create-namespace \
           --namespace $NS
