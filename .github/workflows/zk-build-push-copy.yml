name: build-push-old
on:
  push:
    tags: #r/<ENVIRONMENT>/<DOCKER-TAG-OR-VERSION>
      - 'r/**'
  workflow_dispatch:
    inputs:
      DOCKER_TAG:
        description: 'Docker Image Tag'
        required: true
        default: 'latest'
      ENV:
        description: 'ENV'
        required: true
        default: 'poc'
env:
  ENV: ${{ github.event.inputs.ENV }}
  DOCKER_TAG: ${{ github.event.inputs.DOCKER_TAG }}
  GOOS: ${{ vars.GOOS }}
  GOARCH: ${{ vars.GOARCH }}
  CGO_ENABLED: ${{ vars.CGO_ENABLED }}
  GKE_SA_KEY: ${{ secrets.GKE_SA_KEY }}
  DOCKER_REG: ${{ vars.DOCKER_REG }}
  PROJECT_ID: ${{ vars.PROJECT_ID }}
  DOCKER_REPO: ${{ vars.DOCKER_REPO }}
  APP_NAME: ${{ vars.APP_NAME }}
  GOPRIVATE: ${{ vars.GOPRIVATE }}
  TOKEN: ${{ secrets.GITPAT }}

jobs:
  init:
    runs-on: zk-self-hosted
    outputs:
      ENVIRONMENT: ${{ steps.extractEnvAndVersion.outputs.TAG_ENV }}
      VERSION: ${{ steps.extractEnvAndVersion.outputs.TAG_VERSION }}
    steps:
      - name: Set tag envt var
        run: |
          echo "GIT_TAG=${GITHUB_REF#refs/*/}" >> "$GITHUB_ENV"

      - name: Extract env and version
        id: extractEnvAndVersion
        run: |
          if [ "$DOCKER_TAG" == "" ]; then
            part1=$(echo "$GIT_TAG" | cut -d'/' -f2)
            part2=$(echo "$GIT_TAG" | cut -d'/' -f3)
            echo "TAG_ENV=$part1" >> $GITHUB_OUTPUT
            echo "TAG_VERSION=$part2" >> $GITHUB_OUTPUT
          else
            echo "TAG_ENV=$ENV" >> $GITHUB_OUTPUT
            echo "TAG_VERSION=$DOCKER_TAG" >> $GITHUB_OUTPUT
          fi

      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"

  print-envs:
    needs: init
    runs-on: zk-self-hosted
    env:
      VERSION: ${{ needs.init.outputs.VERSION }}
      ENVIRONMENT: ${{ needs.init.outputs.ENVIRONMENT }}
    environment:
      name: ${{ needs.init.outputs.ENVIRONMENT }}
    steps:
      - name: Check output
        run: |
          echo "GIT_TAG=$GIT_TAG"
          echo "DOCKER_TAG=$VERSION"
          echo "DOCKER_REPO=$DOCKER_REPO"
          echo "ENVIRONMENT=$ENVIRONMENT"

  ##############
  app-build:
    needs: init
    runs-on: zk-self-hosted
    env:
      VERSION: ${{ needs.init.outputs.VERSION }}
      ENVIRONMENT: ${{ needs.init.outputs.ENVIRONMENT }}
    environment:
      name: ${{ needs.init.outputs.ENVIRONMENT }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure git for private modules
        run: git config --global url."https://$TOKEN:x-oauth-basic@github.com/".insteadOf "https://github.com/"

      - name: Build
        run: go build -v -o zk-scenario-manager cmd/main.go

      - name: Uploading Helm Charts (for deploy)
        uses: actions/upload-artifact@v3
        with:
          name: helm-charts
          path: |
            helm-charts

      - name: Uploading Build files (for docker push)
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: |
            zk-scenario-manager
            Dockerfile

  docker-build:
    needs: [ init,app-build ]
    env:
      VERSION: ${{ needs.init.outputs.VERSION }}
      ENVIRONMENT: ${{ needs.init.outputs.ENVIRONMENT }}
    environment:
      name: ${{ needs.init.outputs.ENVIRONMENT }}
    runs-on: zk-self-hosted
    steps:
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ env.GKE_SA_KEY }}'

      - name: login to docker registry
        run: |
          gcloud auth configure-docker $DOCKER_REG --quiet

      - uses: actions/download-artifact@v3
        with:
          name: build-artifacts

      - name: Docker build
        run: |-
          docker build  --tag "$DOCKER_REG/$PROJECT_ID/$DOCKER_REPO/$APP_NAME:$GITHUB_SHA" .

      - name: Docker Tag
        run: |-
          docker tag "$DOCKER_REG/$PROJECT_ID/$DOCKER_REPO/$APP_NAME:$GITHUB_SHA" "$DOCKER_REG/$PROJECT_ID/$DOCKER_REPO/$APP_NAME:$VERSION"

      - name: Docker push
        run: |-
          docker push "$DOCKER_REG/$PROJECT_ID/$DOCKER_REPO/$APP_NAME:$GITHUB_SHA"
          docker push "$DOCKER_REG/$PROJECT_ID/$DOCKER_REPO/$APP_NAME:$VERSION"
