name: dev
on:
  workflow_dispatch:
    inputs:
      DOCKER_TAG:
        description: 'Docker Image Tag'
        required: true
        default: 'latest'
      GKE_CLUSTER:
        description: 'Cluster Name'
        required: true
        default: 'pxclient02'
      ENVIRONMENT:
        description: 'Environment'
        type: string
        default: 'poc'
  workflow_call:
    inputs:
      VERSION:
        type: string
        default: 'latest'
      GKE_CLUSTER:
        type: string
        required: true
      ENVIRONMENT:
        type: string
        default: 'poc'
    secrets:
      GKE_SA_KEY:
        required: true
env:
  DOCKER_TAG: ${{ github.event.inputs.DOCKER_TAG }}
  GKE_CLUSTER_MANUAL: ${{ github.event.inputs.GKE_CLUSTER }}
  GKE_CLUSTER_CALL: ${{ inputs.GKE_CLUSTER }}
  ENVIRONMENT_MANUAL: ${{ github.event.inputs.ENVIRONMENT }}
  ENVIRONMENT_CALL: ${{ inputs.ENVIRONMENT }}
  GKE_SA_KEY: ${{ secrets.GKE_SA_KEY }}

jobs:
  init:
    runs-on: zk-self-hosted
    outputs:
      ENVIRONMENT: ${{ steps.extractClusterAndVersion.outputs.ENVIRONMENT }}
      CLUSTERNAME: ${{ steps.extractClusterAndVersion.outputs.TAG_CLUSTERNAME }}
      VERSION: ${{ steps.extractClusterAndVersion.outputs.TAG_VERSION }}
    steps:
      - name: Set tag envt var
        run: |
          echo "GIT_TAG=${GITHUB_REF#refs/*/}" >> "$GITHUB_ENV"

      - name: Extract cluster and version
        id: extractClusterAndVersion
        run: |
          if [ "$DOCKER_TAG" == "" ]; then
            echo "TAG_CLUSTERNAME=$GKE_CLUSTER_CALL" >> $GITHUB_OUTPUT
            echo "TAG_VERSION=$VERSION" >> $GITHUB_OUTPUT
            echo "ENVIRONMENT=$ENVIRONMENT_CALL" >> $GITHUB_OUTPUT  
            clusterName=$part1
          else
            echo "TAG_CLUSTERNAME=$GKE_CLUSTER_MANUAL" >> $GITHUB_OUTPUT
            echo "TAG_VERSION=$DOCKER_TAG" >> $GITHUB_OUTPUT
            echo "ENVIRONMENT=$ENVIRONMENT_MANUAL" >> $GITHUB_OUTPUT
            clusterName=$GKE_CLUSTER
          fi

      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"

  build-push:
    uses: zerok-ai/zk-scenario-manager/.github/workflows/zk-build-push.yml@helm-push
    with:
      VERSION: ${{ needs.init.outputs.VERSION }}
      ENVIRONMENT: ${{ needs.init.outputs.ENVIRONMENT }}
      DOCKER_IDENTIFIER: ${{ needs.init.outputs.CLUSTERNAME }}
    secrets:
      GKE_SA_KEY: ${{ secrets.GKE_SA_KEY }}
    needs: init

  migration-build-push:
    uses: zerok-ai/zk-scenario-manager/.github/workflows/zk-migrations.yml@helm-push
    with:
      VERSION: ${{ needs.init.outputs.VERSION }}
      ENVIRONMENT: ${{ needs.init.outputs.ENVIRONMENT }}
      DOCKER_IDENTIFIER: ${{ needs.init.outputs.CLUSTERNAME }}
    secrets:
      GKE_SA_KEY: ${{ secrets.GKE_SA_KEY }}
    needs: init

  helm-push:
    uses: zerok-ai/zk-scenario-manager/.github/workflows/zk-helm-publish.yml@helm-push
    with:
      HELM_VERSION: ${{ needs.init.outputs.VERSION }}
      ENVIRONMENT: ${{ needs.init.outputs.ENVIRONMENT }}
      DOCKER_IDENTIFIER: ${{ needs.init.outputs.CLUSTERNAME }}
    secrets:
      AWS_ACCESS_ID: ${{ secrets.AWS_ACCESS_ID }}
      AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
    needs: [ init,build-push ]
